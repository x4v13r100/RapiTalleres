// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapiTalleres.Data;

#nullable disable

namespace RapiTalleres.Migrations
{
    [DbContext(typeof(TallerContext))]
    [Migration("20220924191229_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RapiTalleres.Models.Cita", b =>
                {
                    b.Property<int>("CitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitaID"), 1L, 1);

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("ServicioID")
                        .HasColumnType("int");

                    b.Property<int>("TecnicoID")
                        .HasColumnType("int");

                    b.HasKey("CitaID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("ServicioID");

                    b.HasIndex("TecnicoID");

                    b.ToTable("Cita", (string)null);
                });

            modelBuilder.Entity("RapiTalleres.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("RapiTalleres.Models.Servicio", b =>
                {
                    b.Property<int>("ServicioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicioID"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ServicioID");

                    b.ToTable("Servicio", (string)null);
                });

            modelBuilder.Entity("RapiTalleres.Models.Tecnico", b =>
                {
                    b.Property<int>("TecnicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TecnicoID"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelAcademico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TecnicoID");

                    b.ToTable("Tecnico", (string)null);
                });

            modelBuilder.Entity("RapiTalleres.Models.Cita", b =>
                {
                    b.HasOne("RapiTalleres.Models.Cliente", "Cliente")
                        .WithMany("Citas")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RapiTalleres.Models.Servicio", "Servicio")
                        .WithMany("Citas")
                        .HasForeignKey("ServicioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RapiTalleres.Models.Tecnico", "Tecnico")
                        .WithMany("Citas")
                        .HasForeignKey("TecnicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Servicio");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("RapiTalleres.Models.Cliente", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("RapiTalleres.Models.Servicio", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("RapiTalleres.Models.Tecnico", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
